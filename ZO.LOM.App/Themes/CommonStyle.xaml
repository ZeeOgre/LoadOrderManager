<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Common Control Styles -->

    <!-- Button Style -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox Style -->
    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ContentPresenter Content="{TemplateBinding SelectionBoxItem}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,30,0"/>
                        </Border>
                        <Popup x:Name="PART_Popup" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom">
                            <Grid>
                                <Border x:Name="DropDownBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
                                <ScrollViewer x:Name="ScrollViewer" CanContentScroll="True">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox Style -->
    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource ControlForeground}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
    </Style>

    <!-- TextBox Style -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5,2" />
    </Style>

    <!-- TreeView Style -->
    <Style TargetType="TreeView">
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ControlForeground}" />
    </Style>

    <!-- MultiSelect TreeView Style -->
    <Style TargetType="TreeViewItem" x:Key="MultiSelectTreeViewItemStyle">
        <Setter Property="Padding" Value="4" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ToggleButton x:Name="Expander"
                                          Style="{DynamicResource TreeViewExpanderStyle}"
                                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter Grid.Column="1" ContentSource="Header" HorizontalAlignment="Stretch"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Highlight Search Results -->
                        <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SearchHighlightBackground}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SearchHighlightBorder}" />
                        </DataTrigger>

                        <!-- EntityType Plugin -->
                        <DataTrigger Binding="{Binding EntityType}" Value="Plugin">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PluginBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource PluginForeground}" />
                        </DataTrigger>

                        <!-- EntityType Group -->
                        <DataTrigger Binding="{Binding EntityType}" Value="Group">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource GroupBackground}" />
                            <Setter Property="Foreground" Value="Black"/>
                        </DataTrigger>

                        <!-- Selected Item -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SelectedBackground}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="DarkBlue"/>
                            <Setter Property="Foreground" Value="{DynamicResource SelectedForeground}"/>
                        </Trigger>

                        <!-- Mouse Hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TreeMouseOver}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
