<Window x:Class="ZO.LoadOrderManager.LoadOrderWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ZO.LoadOrderManager"
        Title="LoadOrderWindow" Height="600" Width="1366"
        Loaded="LoadOrderWindow_Loaded">
    <Window.DataContext>
        <local:LoadOrderWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <local:BethesdaUrlConverter x:Key="BethesdaUrlConverter"/>
        <local:NexusUrlConverter x:Key="NexusUrlConverter"/>
        <local:GroupIDToIsEnabledConverter x:Key="GroupIDToIsEnabledConverter"/>
        <local:GroupIDToIsExpandedConverter x:Key="GroupIDToIsExpandedConverter"/>
        <Style TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="True"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />-->
        </Style>
        <!-- Define the templates -->


        <HierarchicalDataTemplate x:Key="GroupTemplate" ItemsSource="{Binding Children}">
            <Grid x:Name="GroupGrid" Background="LightBlue" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <!-- Use the same column definitions as the plugin rows -->
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="250"/>
                    <ColumnDefinition Width="400"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="250"/>
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>

                <!-- Place the Group Text in the second column to align with plugin names -->
                <TextBlock Text="{Binding DisplayName}" Margin="5" Grid.Column="1" Grid.ColumnSpan="5" HorizontalAlignment="Left"/>
            </Grid>
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                    <Setter TargetName="GroupGrid" Property="Background" Value="Yellow"/>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>


        <DataTemplate x:Key="PluginTemplate">
            <Grid x:Name="PluginGrid" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <!-- Checkbox -->
                    <ColumnDefinition Width="250"/>
                    <!-- Plugin name -->
                    <ColumnDefinition Width="400"/>
                    <!-- Description -->
                    <ColumnDefinition Width="50"/>
                    <!-- Achievements -->
                    <ColumnDefinition Width="150"/>
                    <!-- Date -->
                    <ColumnDefinition Width="250"/>
                    <!-- BethesdaID -->
                    <ColumnDefinition Width="100"/>
                    <!-- NexusID -->
                </Grid.ColumnDefinitions>

                <!-- Checkbox for IsEnabled -->
                <CheckBox IsChecked="{Binding IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                  Command="{Binding DataContext.ToggleEnableCommand, RelativeSource={RelativeSource AncestorType=Window}}" 
                  CommandParameter="{Binding}" Grid.Column="0" Margin="5" HorizontalAlignment="Stretch"/>

                <!-- Plugin name (aligned with Group name) -->
                <TextBlock Text="{Binding PluginData.PluginName}" Grid.Column="1" Margin="5" HorizontalAlignment="Left"/>

                <!-- Plugin description -->
                <TextBlock Text="{Binding PluginData.Description}" Grid.Column="2" Margin="5" HorizontalAlignment="Left"/>

                <!-- Achievements -->
                <CheckBox IsChecked="{Binding PluginData.Achievements, Mode=OneWay}" IsEnabled="False" Grid.Column="3" Margin="5" HorizontalAlignment="Left"/>

                <!-- Date (aligned with Date column) -->
                <TextBlock Text="{Binding PluginData.DTStamp}" Grid.Column="4" Margin="5" HorizontalAlignment="Left"/>

                <!-- BethesdaID -->
                <TextBlock Grid.Column="5" Margin="5" HorizontalAlignment="Left">
                    <Hyperlink NavigateUri="{Binding PluginData.BethesdaID, Converter={StaticResource BethesdaUrlConverter}}" RequestNavigate="Hyperlink_RequestNavigate">
                        <TextBlock Text="{Binding PluginData.BethesdaID, TargetNullValue='Bethesda', FallbackValue='Bethesda'}"/>
                    </Hyperlink>
                </TextBlock>

                <!-- NexusID -->
                <TextBlock Grid.Column="6" Margin="5" HorizontalAlignment="Left">
                    <Hyperlink NavigateUri="{Binding PluginData.NexusID, Converter={StaticResource NexusUrlConverter}}" RequestNavigate="Hyperlink_RequestNavigate">
                        <TextBlock Text="{Binding PluginData.NexusID, TargetNullValue='Nexus', FallbackValue='Nexus'}"/>
                    </Hyperlink>
                </TextBlock>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                    <Setter TargetName="PluginGrid" Property="Background" Value="Yellow"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>


        <!-- EntityTypeTemplateSelector with reference to the defined templates -->
        <local:EntityTypeTemplateSelector x:Key="EntityTypeTemplateSelector"
                                          GroupTemplate="{StaticResource GroupTemplate}"
                                          PluginTemplate="{StaticResource PluginTemplate}" />
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Menu -->
        <Menu Grid.Row="0">
            <MenuItem Header="_File">
                <MenuItem Header="Import _Plugins.txt file" Command="{Binding ImportPluginsCommand}"/>
                <MenuItem Header="Import _ContextCatalog.txt" Command="{Binding ImportContextCatalogCommand}"/>
                <MenuItem Header="Scan _Game Folder" Command="{Binding ScanGameFolderCommand}" />
                <MenuItem Header="_Save Plugins.txt" Command="{Binding SavePluginsCommand}"/>
                <MenuItem Header="Save _Active Loadout to database" Command="{Binding SaveCommand}"/>
                <MenuItem Header="Save as _new loadout" Command="{Binding SaveAsNewLoadoutCommand}"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Edit the highlighted item" Command="{Binding EditHighlightedItemCommand}"/>
                <MenuItem Header="Edit _Plugins.txt" Command="{Binding EditPluginsCommand}"/>
                <MenuItem Header="Edit _ContentCatalog.txt" Command="{Binding EditContentCatalogCommand}"/>
            </MenuItem>
            <MenuItem Header="_Open">
                <MenuItem Header="Open _Game Folder" Command="{Binding OpenGameFolderCommand}"/>
                <MenuItem Header="Open Game _Settings" Command="{Binding OpenGameSettingsCommand}"/>
                <MenuItem Header="Open Game _LocalAppData Folder" Command="{Binding OpenGameLocalAppDataCommand}"/>
                <MenuItem Header="Open _Application Data folder" Command="{Binding OpenAppDataFolderCommand}"/>
            </MenuItem>
            <MenuItem Header="_Settings">
                <MenuItem Header="_Settings Window" Command="{Binding SettingsWindowCommand}"/>
                <MenuItem Header="_Import from yaml" Command="{Binding ImportFromYamlCommand}"/>
            </MenuItem>
        </Menu>

        <!-- Column Headers -->
        <Grid Grid.Row="1" Background="LightGray">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <!-- Checkbox column, fixed width -->
                <ColumnDefinition Width="250"/>
                <!-- Plugin name, fixed or min width -->
                <ColumnDefinition Width="400"/>
                <!-- Description, flexible width -->
                <ColumnDefinition Width="50"/>
                <!-- Achievements, fixed width -->
                <ColumnDefinition Width="150"/>
                <!-- Date, min width to fit content -->
                <ColumnDefinition Width="250"/>
                <!-- BethesdaID, min width or auto -->
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Enabled" Grid.Column="0" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Left" AutomationProperties.IsColumnHeader="True"/>
            <TextBlock Text="PluginName" Grid.Column="1" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Left" AutomationProperties.IsColumnHeader="True"/>
            <TextBlock Text="Description" Grid.Column="2" Margin="5" VerticalAlignment="Center" AutomationProperties.IsColumnHeader="True"/>
            <TextBlock Text="Ach. Safe" Grid.Column="3" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Left" AutomationProperties.IsColumnHeader="True"/>
            <TextBlock Text="DTStamp" Grid.Column="4" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center" AutomationProperties.IsColumnHeader="True"/>
            <TextBlock Text="BethesdaID" Grid.Column="5" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center" AutomationProperties.IsColumnHeader="True"/>
            <TextBlock Text="NexusID" Grid.Column="6" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center" AutomationProperties.IsColumnHeader="True"/>
        </Grid>

        <!-- Main Content -->
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Hierarchical DataGrid -->
            <TreeView x:Name="LoadOrderTreeView" Grid.Row="0" ItemsSource="{Binding LoadOrders.Items}" 
          ItemTemplateSelector="{StaticResource EntityTypeTemplateSelector}" 
          HorizontalAlignment="Stretch" 
                HorizontalContentAlignment="Stretch"
                      SelectedItemChanged="TreeView_SelectedItemChanged"
                      Loaded="LoadOrderTreeView_Loaded"
                      MouseDoubleClick="TreeView_MouseDoubleClick"
                      KeyDown="TreeView_KeyDown"
                      MouseRightButtonDown="TreeView_MouseRightButtonDown">
                <TreeView.Resources>
                    <ContextMenu x:Key="ItemContextMenu">
                        <MenuItem Header="Edit" Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                        <MenuItem Header="Copy" Command="{Binding DataContext.CopyTextCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                        <MenuItem Header="Move Up" Command="{Binding DataContext.MoveUpCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                        <MenuItem Header="Move Down" Command="{Binding DataContext.MoveDownCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                        <MenuItem Header="Change Group">
                            <MenuItem.ItemsSource>
                                <Binding Path="DataContext.ValidGroups" RelativeSource="{RelativeSource AncestorType=TreeView}"/>
                            </MenuItem.ItemsSource>
                            <MenuItem.ItemTemplate>
                                <DataTemplate>
                                    <MenuItem Header="{Binding GroupName}" Command="{Binding DataContext.ChangeGroupCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                        </MenuItem>
                        <MenuItem Header="Delete" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                        <MenuItem Header="Enable/Disable" Command="{Binding DataContext.ToggleEnableCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                    </ContextMenu>
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                        <Setter Property="IsExpanded" Value="{Binding GroupID, Converter={StaticResource GroupIDToIsExpandedConverter}}"/>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>

            <Grid Grid.Row="1" Height="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="2"/>
                </Grid.RowDefinitions>
                <Border Grid.Row="0" Background="Black"/>
            </Grid>

            <!-- New TreeView for CachedGroupSet1 -->
            <TreeView x:Name="CachedGroupSetTreeView" Grid.Row="2" ItemsSource="{Binding CachedGroupSetLoadOrders.Items}" 
                      ItemTemplateSelector="{StaticResource EntityTypeTemplateSelector}"
                      Loaded="CachedGroupSetTreeView_Loaded"
                      SelectedItemChanged="TreeView_SelectedItemChanged"
                      MouseDoubleClick="TreeView_MouseDoubleClick"
                      KeyDown="TreeView_KeyDown"
                      MouseRightButtonDown="TreeView_MouseRightButtonDown">
                <TreeView.Resources>
                    <ContextMenu x:Key="CachedItemContextMenu">
                        <MenuItem Header="Edit" Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                        <MenuItem Header="Copy" Command="{Binding DataContext.CopyTextCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                        <MenuItem Header="Move Up" Command="{Binding DataContext.MoveUpCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                        <MenuItem Header="Move Down" Command="{Binding DataContext.MoveDownCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                        <MenuItem Header="Change Group">
                            <MenuItem.ItemsSource>
                                <Binding Path="DataContext.ValidGroups" RelativeSource="{RelativeSource AncestorType=TreeView}" />
                            </MenuItem.ItemsSource>
                            <MenuItem.ItemTemplate>
                                <DataTemplate>
                                    <MenuItem Header="{Binding GroupName}" Command="{Binding DataContext.ChangeGroupCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                        </MenuItem>
                        <MenuItem Header="Delete" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                        <MenuItem Header="Enable/Disable" Command="{Binding DataContext.ToggleEnableCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" CommandParameter="{Binding}" />
                    </ContextMenu>
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="ContextMenu" Value="{StaticResource CachedItemContextMenu}" />
                        <Setter Property="IsExpanded" Value="{Binding GroupID, Converter={StaticResource GroupIDToIsExpandedConverter}}"/>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>

            <!-- Buttons and Textboxes below the TreeView -->
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Up Arrow Button -->
                <Button Grid.Row="0" Grid.Column="0" Width="50" Height="50" 
            Command="{Binding MoveUpCommand}" 
            IsEnabled="{Binding CanMoveUp}" Margin="5">
                    <Button.Content>
                        <Path Data="M 25,0 L 50,50 L 0,50 Z" Fill="Black"/>
                    </Button.Content>
                </Button>

                <!-- Down Arrow Button -->
                <Button Grid.Row="0" Grid.Column="1" Width="50" Height="50" 
            Command="{Binding MoveDownCommand}" 
            IsEnabled="{Binding CanMoveDown}" Margin="5">
                    <Button.Content>
                        <Path Data="M 0,0 L 50,0 L 25,50 Z" Fill="Black"/>
                    </Button.Content>
                </Button>

                <Button x:Name="EditRowButton" Content="Edit Row" Width="100" Command="{Binding EditHighlightedItemCommand}" HorizontalAlignment="Center" Grid.Column="2" Margin="5"/>
            </Grid>

            <Grid Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <TextBox x:Name="SearchBox" Width="200" Margin="5,5,5,5" Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button x:Name="SearchButton" Content="Search" Command="{Binding SearchCommand}"/>
                </StackPanel>
                
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <ComboBox x:Name="cmbGroupSet"
              ItemsSource="{Binding GroupSets}" 
              SelectedItem="{Binding SelectedGroupSet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
              DisplayMemberPath="GroupSetName" 
              HorizontalAlignment="Center" 
              VerticalAlignment="Top" 
              Width="200" Height="30" Margin="300,10,10,10" 
              IsSynchronizedWithCurrentItem="True">
                    </ComboBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1">
                    <Button x:Name="SaveButton" Content="Save" Width="50" Margin="5,5,5,5" Command="{Binding SaveLoadOutCommand}"/>
                    <ComboBox x:Name="cmbProfile"
              ItemsSource="{Binding LoadOuts}"
              SelectedItem="{Binding SelectedLoadOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
              DisplayMemberPath="Name"
              Width="200" Height="30" Margin="10">
                    </ComboBox>
                </StackPanel>

            </Grid>
        </Grid>
        <!-- Status Bar -->
        <StatusBar Grid.Row="5">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>

